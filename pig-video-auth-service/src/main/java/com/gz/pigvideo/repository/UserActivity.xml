<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gz.pigvideo.repository.UserActivityDao">
    <!-- UserActivity的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_UserActivity_Map" type="com.gz.pigvideo.domain.UserActivity">
        <id column="id" property="id" />
        <result column="uid" property="uid" />
        <result column="create_time" property="createTime" />
        <result column="name" property="name" />
        <result column="behavior" property="behavior" />
        <result column="account" property="account" />
        <result column="content" property="content" />
    </resultMap>

	<!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	<!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:user_activity的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="user_activity_Column">
        user_activity.id as id
        ,user_activity.uid as uid
        ,user_activity.create_time as create_time
        ,user_activity.name as name
        ,user_activity.behavior as behavior
        ,user_activity.account as account
        ,user_activity.content as content
    </sql>

    <!--获得类名为:UserActivity对应的数据库表的数据总行数 -->
    <select id="getUserActivityRowCount" parameterType="com.gz.pigvideo.common.Assist" resultType="java.lang.Long">
        select count(id) from user_activity
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:UserActivity对应数据库中表的数据集合 -->
    <select id="selectUserActivity" parameterType="com.gz.pigvideo.common.Assist"  resultMap="result_UserActivity_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="user_activity_Column" /> 
            </otherwise>
        </choose>
        from user_activity
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM user_activity
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=user_activity.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个UserActivity对象,以参数UserActivity对象中不为空的属性作为条件进行查询-->
    <select id="selectUserActivityByObj" parameterType="com.gz.pigvideo.domain.UserActivity" resultMap="result_UserActivity_Map">
        select 
            <include refid="user_activity_Column" /> 
        from user_activity
        <where>
            <if test="content != null "> and user_activity.content = #{content}</if>
            <if test="account != null "> and user_activity.account = #{account}</if>
            <if test="behavior != null "> and user_activity.behavior = #{behavior}</if>
            <if test="name != null "> and user_activity.name = #{name}</if>
            <if test="createTime != null "> and user_activity.create_time = #{createTime}</if>
            <if test="uid != null "> and user_activity.uid = #{uid}</if>
            <if test="id != null "> and user_activity.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过UserActivity的id获得对应数据库中表的数据对象-->
    <select id="selectUserActivityById" parameterType="java.lang.Integer" resultMap="result_UserActivity_Map">
        select 
            <include refid="user_activity_Column" /> 
        from user_activity
        where user_activity.id = #{id}
    </select> 

    <!-- 将UserActivity插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertUserActivity" parameterType="com.gz.pigvideo.domain.UserActivity">
        insert into user_activity(id,uid,create_time,name,behavior,account,content) 
        values(#{id},#{uid},#{createTime},#{name},#{behavior},#{account},#{content})
    </insert>

    <!-- 将UserActivity中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyUserActivity" parameterType="com.gz.pigvideo.domain.UserActivity">
        insert into user_activity
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="uid != null">uid,</if>
            <if test="createTime != null">create_time,</if>
            <if test="name != null">name,</if>
            <if test="behavior != null">behavior,</if>
            <if test="account != null">account,</if>
            <if test="content != null">content,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="uid != null"> #{uid},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="name != null"> #{name},</if>
            <if test="behavior != null"> #{behavior},</if>
            <if test="account != null"> #{account},</if>
            <if test="content != null"> #{content},</if>
        </trim>
    </insert>

    <!-- 将UserActivity批量插入到对应数据库的表中-->
    <insert id="insertUserActivityByBatch" parameterType="ArrayList">
        insert into user_activity(id,uid,create_time,name,behavior,account,content) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.uid},#{item.createTime},#{item.name},#{item.behavior},#{item.account},#{item.content})
        </foreach>
    </insert>

    <!-- 通过UserActivity的id将数据库表中对应的数据删除-->
    <delete id="deleteUserActivityById" parameterType="java.lang.Integer">
        delete from user_activity
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将UserActivity对应的数据库表的数据删除-->
    <delete id="deleteUserActivity" parameterType="com.gz.pigvideo.common.Assist">
        delete from user_activity
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过UserActivity的id将UserActivity的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateUserActivityById" parameterType="com.gz.pigvideo.domain.UserActivity">
        update user_activity set
            uid=#{uid}
            ,create_time=#{createTime}
            ,name=#{name}
            ,behavior=#{behavior}
            ,account=#{account}
            ,content=#{content}
        where id=#{id}
    </update>

    <!-- 通过UserActivity的id将UserActivity中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyUserActivityById" parameterType="com.gz.pigvideo.domain.UserActivity">
        update user_activity
        <set>
            <if test="uid != null">
                uid=#{uid},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="behavior != null">
                behavior=#{behavior},
            </if>
            <if test="account != null">
                account=#{account},
            </if>
            <if test="content != null">
                content=#{content},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将UserActivity中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateUserActivity" parameterType="map">
        update user_activity
        <set>
                id=#{enti.id},
                uid=#{enti.uid},
                create_time=#{enti.createTime},
                name=#{enti.name},
                behavior=#{enti.behavior},
                account=#{enti.account},
                content=#{enti.content},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将UserActivity中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyUserActivity" parameterType="map">
        update user_activity
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.uid != null">
                uid=#{enti.uid},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.behavior != null">
                behavior=#{enti.behavior},
            </if>
            <if test="enti.account != null">
                account=#{enti.account},
            </if>
            <if test="enti.content != null">
                content=#{enti.content},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <select id="selectCountByDate" parameterType="map" resultType="com.gz.pigvideo.domain.NewTabCount">
		select a.account,a.strDate,count(*) as count
		from  
		  (SELECT t.account as account,
		          FROM_UNIXTIME(t.create_time/1000,'%Y-%m-%d ')  as strDate
		   FROM user_activity t    
		   where t.create_time &gt;= #{startDate} and 
		         t.create_time &lt;= #{endDate}   and
		         t.behavior = #{behavior}) a
		group by a.account,a.strDate;
    </select>

</mapper>