<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gz.pigcloud.repository.ReadlaterDao">
    <!-- Readlater的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Readlater_Map" type="com.gz.pigcloud.domain.Readlater">
        <id column="id" property="id" />
        <result column="uid" property="uid" />
        <result column="parent_id" property="parentId" />
        <result column="read_status" property="readStatus" />
        <result column="title" property="title" />
        <result column="addDate" property="addDate" />
        <result column="url" property="url" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	<!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:readlater的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="readlater_Column">
        readlater.id as id
        ,readlater.uid as uid
        ,readlater.parent_id as parent_id
        ,readlater.read_status as read_status
        ,readlater.title as title
        ,readlater.addDate as addDate
        ,readlater.url as url
    </sql>

    <!--获得类名为:Readlater对应的数据库表的数据总行数 -->
    <select id="getReadlaterRowCount" parameterType="com.gz.pigcloud.common.Assist" resultType="java.lang.Long">
        select count(id) from readlater
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Readlater对应数据库中表的数据集合 -->
    <select id="selectReadlater" parameterType="com.gz.pigcloud.common.Assist" resultMap="result_Readlater_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="readlater_Column" /> 
            </otherwise>
        </choose>
        from readlater
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM readlater
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=readlater.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Readlater对象,以参数Readlater对象中不为空的属性作为条件进行查询-->
    <select id="selectReadlaterByObj" parameterType="com.gz.pigcloud.domain.Readlater" resultMap="result_Readlater_Map">
        select 
            <include refid="readlater_Column" /> 
        from readlater
        <where>
            <if test="url != null "> and readlater.url = #{url}</if>
            <if test="addDate != null "> and readlater.addDate = #{addDate}</if>
            <if test="title != null "> and readlater.title = #{title}</if>
            <if test="readStatus != null "> and readlater.read_status = #{readStatus}</if>
            <if test="parentId != null "> and readlater.parent_id = #{parentId}</if>
            <if test="uid != null "> and readlater.uid = #{uid}</if>
            <if test="id != null "> and readlater.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Readlater的id获得对应数据库中表的数据对象-->
    <select id="selectReadlaterById" parameterType="java.lang.Integer" resultMap="result_Readlater_Map">
        select 
            <include refid="readlater_Column" /> 
        from readlater
        where readlater.id = #{id}
    </select> 

    <!-- 将Readlater插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertReadlater" parameterType="com.gz.pigcloud.domain.Readlater">
        insert into readlater(id,uid,parent_id,read_status,title,addDate,url) 
        values(#{id},#{uid},#{parentId},#{readStatus},#{title},#{addDate},#{url})
    </insert>

    <!-- 将Readlater中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyReadlater" parameterType="com.gz.pigcloud.domain.Readlater">
        insert into readlater
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="uid != null">uid,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="readStatus != null">read_status,</if>
            <if test="title != null">title,</if>
            <if test="addDate != null">addDate,</if>
            <if test="url != null">url,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="uid != null"> #{uid},</if>
            <if test="parentId != null"> #{parentId},</if>
            <if test="readStatus != null"> #{readStatus},</if>
            <if test="title != null"> #{title},</if>
            <if test="addDate != null"> #{addDate},</if>
            <if test="url != null"> #{url},</if>
        </trim>
    </insert>

    <!-- 将Readlater批量插入到对应数据库的表中-->
    <insert id="insertReadlaterByBatch" parameterType="ArrayList">
        insert into readlater(id,uid,parent_id,read_status,title,addDate,url) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.uid},#{item.parentId},#{item.readStatus},#{item.title},#{item.addDate},#{item.url})
        </foreach>
    </insert>

    <!-- 通过Readlater的id将数据库表中对应的数据删除-->
    <delete id="deleteReadlaterById" parameterType="java.lang.Integer">
        delete from readlater
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Readlater对应的数据库表的数据删除-->
    <delete id="deleteReadlater" parameterType="com.gz.pigcloud.common.Assist">
        delete from readlater
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Readlater的id将Readlater的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateReadlaterById" parameterType="com.gz.pigcloud.domain.Readlater">
        update readlater set
            uid=#{uid}
            ,parent_id=#{parentId}
            ,read_status=#{readStatus}
            ,title=#{title}
            ,addDate=#{addDate}
            ,url=#{url}
        where id=#{id}
    </update>

    <!-- 通过Readlater的id将Readlater中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyReadlaterById" parameterType="com.gz.pigcloud.domain.Readlater">
        update readlater
        <set>
            <if test="uid != null">
                uid=#{uid},
            </if>
            <if test="parentId != null">
                parent_id=#{parentId},
            </if>
            <if test="readStatus != null">
                read_status=#{readStatus},
            </if>
            <if test="title != null">
                title=#{title},
            </if>
            <if test="addDate != null">
                addDate=#{addDate},
            </if>
            <if test="url != null">
                url=#{url},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Readlater中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateReadlater" parameterType="map">
        update readlater
        <set>
                id=#{enti.id},
                uid=#{enti.uid},
                parent_id=#{enti.parentId},
                read_status=#{enti.readStatus},
                title=#{enti.title},
                addDate=#{enti.addDate},
                url=#{enti.url},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Readlater中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyReadlater" parameterType="map">
        update readlater
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.uid != null">
                uid=#{enti.uid},
            </if>
            <if test="enti.parentId != null">
                parent_id=#{enti.parentId},
            </if>
            <if test="enti.readStatus != null">
                read_status=#{enti.readStatus},
            </if>
            <if test="enti.title != null">
                title=#{enti.title},
            </if>
            <if test="enti.addDate != null">
                addDate=#{enti.addDate},
            </if>
            <if test="enti.url != null">
                url=#{enti.url},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>