<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gz.pigcloud.repository.NoteDao">
    <!-- Note的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Note_Map" type="com.gz.pigcloud.domain.Note">
        <id column="id" property="id" />
        <result column="uid" property="uid" />
        <result column="createTime" property="createTime" />
        <result column="updateTime" property="updateTime" />
        <result column="type" property="type" />
        <result column="title" property="title" />
        <result column="fromid" property="fromid" />
        <result column="content" property="content" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:note的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="note_Column">
        note.id as id
        ,note.uid as uid
        ,note.createTime as createTime
        ,note.updateTime as updateTime
        ,note.type as type
        ,note.title as title
        ,note.fromid as fromid
        ,note.content as content
    </sql>

    <!--获得类名为:Note对应的数据库表的数据总行数 -->
    <select id="getNoteRowCount" parameterType="com.gz.pigcloud.common.Assist" resultType="java.lang.Long">
        select count(id) from note
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Note对应数据库中表的数据集合 -->
    <select id="selectNote" parameterType="com.gz.pigcloud.common.Assist" resultMap="result_Note_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="note_Column" /> 
            </otherwise>
        </choose>
        from note
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM note
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=note.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Note对象,以参数Note对象中不为空的属性作为条件进行查询-->
    <select id="selectNoteByObj" parameterType="com.gz.pigcloud.domain.Note" resultMap="result_Note_Map">
        select 
            <include refid="note_Column" /> 
        from note
        <where>
            <if test="content != null "> and note.content = #{content}</if>
            <if test="fromid != null "> and note.fromid = #{fromid}</if>
            <if test="title != null "> and note.title = #{title}</if>
            <if test="type != null "> and note.type = #{type}</if>
            <if test="updateTime != null "> and note.updateTime = #{updateTime}</if>
            <if test="createTime != null "> and note.createTime = #{createTime}</if>
            <if test="uid != null "> and note.uid = #{uid}</if>
            <if test="id != null "> and note.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Note的id获得对应数据库中表的数据对象-->
    <select id="selectNoteById" parameterType="java.lang.Integer" resultMap="result_Note_Map">
        select 
            <include refid="note_Column" /> 
        from note
        where note.id = #{id}
    </select> 

    <!-- 将Note插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertNote" parameterType="com.gz.pigcloud.domain.Note">
        insert into note(id,uid,createTime,updateTime,type,title,fromid,content) 
        values(#{id},#{uid},#{createTime},#{updateTime},#{type},#{title},#{fromid},#{content})
    </insert>

    <!-- 将Note批量插入到对应数据库的表中-->
    <insert id="insertNoteByBatch" parameterType="ArrayList">
        insert into note(id,uid,createTime,updateTime,type,title,fromid,content) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.uid},#{item.createTime},#{item.updateTime},#{item.type},#{item.title},#{item.fromid},#{item.content})
        </foreach>
    </insert>

    <!-- 通过Note的id将数据库表中对应的数据删除-->
    <delete id="deleteNoteById" parameterType="java.lang.Integer">
        delete from note
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Note对应的数据库表的数据删除-->
    <delete id="deleteNote" parameterType="com.gz.pigcloud.common.Assist">
        delete from note
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Note的id将Note的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateNoteById" parameterType="com.gz.pigcloud.domain.Note">
        update note set
            uid=#{uid}
            ,createTime=#{createTime}
            ,updateTime=#{updateTime}
            ,type=#{type}
            ,title=#{title}
            ,fromid=#{fromid}
            ,content=#{content}
        where id=#{id}
    </update>

    <!-- 通过Note的id将Note中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyNoteById" parameterType="com.gz.pigcloud.domain.Note">
        update note
        <set>
            <if test="uid != null">
                uid=#{uid},
            </if>
            <if test="createTime != null">
                createTime=#{createTime},
            </if>
            <if test="updateTime != null">
                updateTime=#{updateTime},
            </if>
            <if test="type != null">
                type=#{type},
            </if>
            <if test="title != null">
                title=#{title},
            </if>
            <if test="fromid != null">
                fromid=#{fromid},
            </if>
            <if test="content != null">
                content=#{content},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Note中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateNote" parameterType="map">
        update note
        <set>
                id=#{enti.id},
                uid=#{enti.uid},
                createTime=#{enti.createTime},
                updateTime=#{enti.updateTime},
                type=#{enti.type},
                title=#{enti.title},
                fromid=#{enti.fromid},
                content=#{enti.content},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Note中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyNote" parameterType="map">
        update note
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.uid != null">
                uid=#{enti.uid},
            </if>
            <if test="enti.createTime != null">
                createTime=#{enti.createTime},
            </if>
            <if test="enti.updateTime != null">
                updateTime=#{enti.updateTime},
            </if>
            <if test="enti.type != null">
                type=#{enti.type},
            </if>
            <if test="enti.title != null">
                title=#{enti.title},
            </if>
            <if test="enti.fromid != null">
                fromid=#{enti.fromid},
            </if>
            <if test="enti.content != null">
                content=#{enti.content},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>
    
	<!-- 修改过的sql -->
	
   	<!-- 将Note中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyNote" useGeneratedKeys="true" keyProperty="id" parameterType="com.gz.pigcloud.domain.Note">
        insert into note
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="uid != null">uid,</if>
            <if test="createTime != null">createTime,</if>
            <if test="updateTime != null">updateTime,</if>
            <if test="type != null">type,</if>
            <if test="title != null">title,</if>
            <if test="fromid != null">fromid,</if>
            <if test="content != null">content,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="uid != null"> #{uid},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="type != null"> #{type},</if>
            <if test="title != null"> #{title},</if>
            <if test="fromid != null"> #{fromid},</if>
            <if test="content != null"> #{content},</if>
        </trim>
    </insert>


</mapper>