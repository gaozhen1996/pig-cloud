<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gz.pigvideo.repository.PlanDao">
    <!-- Plan的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Plan_Map" type="com.gz.pigvideo.domain.Plan">
        <id column="id" property="id" />
        <result column="uid" property="uid" />
        <result column="plan_type" property="planType" />
        <result column="finish_status" property="finishStatus" />
        <result column="finish_date" property="finishDate" />
        <result column="plan_index" property="planIndex" />
        <result column="public_flag" property="publicFlag" />
        <result column="create_date" property="createDate" />
        <result column="actual_finish_date" property="actualFinishDate" />
        <result column="content" property="content" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:plan的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="plan_Column">
        plan.id as id
        ,plan.uid as uid
        ,plan.plan_type as plan_type
        ,plan.finish_status as finish_status
        ,plan.finish_date as finish_date
        ,plan.plan_index as plan_index
        ,plan.public_flag as public_flag
        ,plan.create_date as create_date
        ,plan.actual_finish_date as actual_finish_date
        ,plan.content as content
    </sql>

    <!--获得类名为:Plan对应的数据库表的数据总行数 -->
    <select id="getPlanRowCount" parameterType="com.gz.pigvideo.common.Assist" resultType="java.lang.Long">
        select count(id) from plan
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Plan对应数据库中表的数据集合 -->
    <select id="selectPlan" parameterType="com.gz.pigvideo.common.Assist"  resultMap="result_Plan_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="plan_Column" /> 
            </otherwise>
        </choose>
        from plan
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM plan
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=plan.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Plan对象,以参数Plan对象中不为空的属性作为条件进行查询-->
    <select id="selectPlanByObj" parameterType="com.gz.pigvideo.domain.Plan" resultMap="result_Plan_Map">
        select 
            <include refid="plan_Column" /> 
        from plan
        <where>
            <if test="content != null "> and plan.content = #{content}</if>
            <if test="actualFinishDate != null "> and plan.actual_finish_date = #{actualFinishDate}</if>
            <if test="createDate != null "> and plan.create_date = #{createDate}</if>
            <if test="publicFlag != null "> and plan.public_flag = #{publicFlag}</if>
            <if test="planIndex != null "> and plan.plan_index = #{planIndex}</if>
            <if test="finishDate != null "> and plan.finish_date = #{finishDate}</if>
            <if test="finishStatus != null "> and plan.finish_status = #{finishStatus}</if>
            <if test="planType != null "> and plan.plan_type = #{planType}</if>
            <if test="uid != null "> and plan.uid = #{uid}</if>
            <if test="id != null "> and plan.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Plan的id获得对应数据库中表的数据对象-->
    <select id="selectPlanById" parameterType="java.lang.Integer" resultMap="result_Plan_Map">
        select 
            <include refid="plan_Column" /> 
        from plan
        where plan.id = #{id}
    </select> 

    <!-- 将Plan插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertPlan" parameterType="com.gz.pigvideo.domain.Plan">
        insert into plan(id,uid,plan_type,finish_status,finish_date,plan_index,public_flag,create_date,actual_finish_date,content) 
        values(#{id},#{uid},#{planType},#{finishStatus},#{finishDate},#{planIndex},#{publicFlag},#{createDate},#{actualFinishDate},#{content})
    </insert>

    <!-- 将Plan批量插入到对应数据库的表中-->
    <insert id="insertPlanByBatch" parameterType="ArrayList">
        insert into plan(id,uid,plan_type,finish_status,finish_date,plan_index,public_flag,create_date,actual_finish_date,content) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.uid},#{item.planType},#{item.finishStatus},#{item.finishDate},#{item.planIndex},#{item.publicFlag},#{item.createDate},#{item.actualFinishDate},#{item.content})
        </foreach>
    </insert>

    <!-- 通过辅助工具Assist中的条件将Plan对应的数据库表的数据删除-->
    <delete id="deletePlan" parameterType="com.gz.pigvideo.common.Assist">
        delete from plan
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Plan的id将Plan的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updatePlanById" parameterType="com.gz.pigvideo.domain.Plan">
        update plan set
            uid=#{uid}
            ,plan_type=#{planType}
            ,finish_status=#{finishStatus}
            ,finish_date=#{finishDate}
            ,plan_index=#{planIndex}
            ,public_flag=#{publicFlag}
            ,create_date=#{createDate}
            ,actual_finish_date=#{actualFinishDate}
            ,content=#{content}
        where id=#{id}
    </update>

    <!-- 通过Plan的id将Plan中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPlanById" parameterType="com.gz.pigvideo.domain.Plan">
        update plan
        <set>
            <if test="uid != null">
                uid=#{uid},
            </if>
            <if test="planType != null">
                plan_type=#{planType},
            </if>
            <if test="finishStatus != null">
                finish_status=#{finishStatus},
            </if>
            <if test="finishDate != null">
                finish_date=#{finishDate},
            </if>
            <if test="planIndex != null">
                plan_index=#{planIndex},
            </if>
            <if test="publicFlag != null">
                public_flag=#{publicFlag},
            </if>
            <if test="createDate != null">
                create_date=#{createDate},
            </if>
            <if test="actualFinishDate != null">
                actual_finish_date=#{actualFinishDate},
            </if>
            <if test="content != null">
                content=#{content},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Plan中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updatePlan" parameterType="map">
        update plan
        <set>
                id=#{enti.id},
                uid=#{enti.uid},
                plan_type=#{enti.planType},
                finish_status=#{enti.finishStatus},
                finish_date=#{enti.finishDate},
                plan_index=#{enti.planIndex},
                public_flag=#{enti.publicFlag},
                create_date=#{enti.createDate},
                actual_finish_date=#{enti.actualFinishDate},
                content=#{enti.content},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Plan中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPlan" parameterType="map">
        update plan
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.uid != null">
                uid=#{enti.uid},
            </if>
            <if test="enti.planType != null">
                plan_type=#{enti.planType},
            </if>
            <if test="enti.finishStatus != null">
                finish_status=#{enti.finishStatus},
            </if>
            <if test="enti.finishDate != null">
                finish_date=#{enti.finishDate},
            </if>
            <if test="enti.planIndex != null">
                plan_index=#{enti.planIndex},
            </if>
            <if test="enti.publicFlag != null">
                public_flag=#{enti.publicFlag},
            </if>
            <if test="enti.createDate != null">
                create_date=#{enti.createDate},
            </if>
            <if test="enti.actualFinishDate != null">
                actual_finish_date=#{enti.actualFinishDate},
            </if>
            <if test="enti.content != null">
                content=#{enti.content},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

	<!-- 以下的自定义SQL 替换了deletePlanById -->
	
    <!-- 通过Plan的id将数据库表中对应的数据删除-->
    <delete id="deletePlanById" parameterType="com.gz.pigvideo.domain.Plan">
    	create table tmp as SELECT id FROM pig_video.plan   
			where uid = #{uid}  and plan_type = #{planType} and plan_index > #{planIndex}   order by plan_index;
		update plan set plan_index=plan_index -1  where id in (select id from tmp);
		drop table tmp;
    
        delete from plan where id = #{id}
    </delete>
    
    <!-- 修改Plan类型 -->
    <update id="updatePlanType" parameterType="map" statementType="CALLABLE">
		call update_PlanType(#{new.uid},#{new.id},
							 #{new.planType},#{new.planIndex},
							 #{old.planType},#{old.planIndex});
    </update>

    <!-- 将Plan中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyPlan" useGeneratedKeys="true" keyProperty="id" parameterType="com.gz.pigvideo.domain.Plan">
        insert into plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="uid != null">uid,</if>
            <if test="planType != null">plan_type,</if>
            <if test="finishStatus != null">finish_status,</if>
            <if test="finishDate != null">finish_date,</if>
            <if test="planIndex != null">plan_index,</if>
            <if test="publicFlag != null">public_flag,</if>
            <if test="createDate != null">create_date,</if>
            <if test="actualFinishDate != null">actual_finish_date,</if>
            <if test="content != null">content,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="uid != null"> #{uid},</if>
            <if test="planType != null"> #{planType},</if>
            <if test="finishStatus != null"> #{finishStatus},</if>
            <if test="finishDate != null"> #{finishDate},</if>
            <if test="planIndex != null"> #{planIndex},</if>
            <if test="publicFlag != null"> #{publicFlag},</if>
            <if test="createDate != null"> #{createDate},</if>
            <if test="actualFinishDate != null"> #{actualFinishDate},</if>
            <if test="content != null"> #{content},</if>
        </trim>
    </insert>
</mapper>